// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Parnas.Infrastructure.ApplicationDbContext;

#nullable disable

namespace Parnas.Infrastructure.Migrations
{
    [DbContext(typeof(ParnasDbContext))]
    [Migration("20240915133125_Mig_Add_ProductImage_In_Product")]
    partial class Mig_Add_ProductImage_In_Product
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Parnas.Domain.Entities.Accessories", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("AntiGhosting")
                        .HasColumnType("bit");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConnectionPort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dimensions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Input")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InterfaceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Lighting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Microphone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutPut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Quality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sensor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accessories");
                });

            modelBuilder.Entity("Parnas.Domain.Entities.Case", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CaseFanSpeedController")
                        .HasColumnType("bit");

                    b.Property<string>("CaseLighting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseUSBType_CPort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dimensions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FancaseLightingController")
                        .HasColumnType("bit");

                    b.Property<bool>("HeadPhoneOutPut")
                        .HasColumnType("bit");

                    b.Property<string>("Inch2_5DriveBay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inch3_5DriveBay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Lighting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxSizeOfCoolerBackPanel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxSizeOfCoolerCeilingPanel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxSizeOfCoolerFrontPanel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaximumCPUCoolerHeight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaximumLengthOfGraphicCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MicrophoneInput")
                        .HasColumnType("bit");

                    b.Property<string>("NumberOf120mmInstallableFans")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberOfFanInstalledInCase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberOfFansThatCanBeInstalledInCase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberOfFansThatCanBeInstalledInTheFront")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberOfFansThatCanBeInstalledinTheCeiling")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberOfFansThatCanBeInstalledonTheBack")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberOfInstalledFansIs140mm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberofPowerSuppliesThatCanBeInstalled")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberofUSBPortsIs3Cases")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerSupplyInstallationLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cases");
                });

            modelBuilder.Entity("Parnas.Domain.Entities.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dimensions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Parnas.Domain.Entities.ComputerMonitor", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BackLight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dimensions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayAspectRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayImagePort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HdmiImagePort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("MonitorTechnology")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonitorUserClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PannelType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerConsumption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ResponseTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RotationCapability")
                        .HasColumnType("bit");

                    b.Property<string>("ScreenResolution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScreenSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Speaker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusContrast")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsbPort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("VesaSupport")
                        .HasColumnType("bit");

                    b.Property<string>("VisualAngle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Monitors");
                });

            modelBuilder.Entity("Parnas.Domain.Entities.Cooling", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AMDSocketSupport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlockLighting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoolingFanRotationSpeed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoolingPipeLenght")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dimensions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FanConnection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FanLighting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntelSocketSupport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("MaximumAirFlow")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberOfCoolingFans")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PumpRotationSpeed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RadiatorDimensions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RadiatorMaterial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfCoolingFan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfProccesorBlock")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Coolings");
                });

            modelBuilder.Entity("Parnas.Domain.Entities.CPU", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BaseFerequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoostFerequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPUMaxHdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPUMemoryTechnology")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPUMonitorCount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CachLevel2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CachLevel3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoreCount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoreE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoreP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dimensions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Generation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GraphicProccesor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GraphicProccesorFerequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GraphicProccesorModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HDDFerequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCIExpressCPU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Packaging")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerCounsumption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Socket")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StringCount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Technology")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CPUs");
                });

            modelBuilder.Entity("Parnas.Domain.Entities.FanCase", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseFanNoiseLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CaseFanSpeedController")
                        .HasColumnType("bit");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dimensions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FanCaseController")
                        .HasColumnType("bit");

                    b.Property<string>("FanCaseLighting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FanCaseType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FanCaseUsageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("LightingControllerFanCase")
                        .HasColumnType("bit");

                    b.Property<string>("MaximumCaseAirFlow")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RatiotionSpeedOfTheCaseFan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FanCases");
                });

            modelBuilder.Entity("Parnas.Domain.Entities.Gaming", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Case")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeepCool")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dimensions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Graphic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("MotherBoard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Power")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Ram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gamings");
                });

            modelBuilder.Entity("Parnas.Domain.Entities.GraphicCard", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BaseFerequencyOfTheGraphicsCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoostFerequensyOfTheGraphicsCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CudaCore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dimensions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirectXInterface")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayPortOutputOfTheGraphicCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FullHdSupport")
                        .HasColumnType("bit");

                    b.Property<string>("GPUManuFacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GraphicCardModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GraphicCardProccesorGeneration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GraphicsCardCooler")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HDCPSupport")
                        .HasColumnType("bit");

                    b.Property<string>("HdmiOutPutOfTheGraphicCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InterfaceBandWidth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("K4Support")
                        .HasColumnType("bit");

                    b.Property<bool>("K8Support")
                        .HasColumnType("bit");

                    b.Property<string>("Lighting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaximumResolution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemorySize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemorySpeed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemoryType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberOfGraphicCardFans")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpenGLInterface")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PciExpressGeneration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerConnector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RecommendedPower")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupportedDisplay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GraphicCards");
                });

            modelBuilder.Entity("Parnas.Domain.Entities.HDD", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Capacity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dimensions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HardDiskCachMemory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HardDrivePort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RotationSpeed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TheAppearanceOfTheHardDrive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HDDs");
                });

            modelBuilder.Entity("Parnas.Domain.Entities.MotherBoard", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AppearanceOfTheMotherBoard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Bluetooth")
                        .HasColumnType("bit");

                    b.Property<string>("BluetoothVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPUPowerConnector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Chipset")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Configuration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dimensions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HdmiOutputOfTheMotherBoard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("M2Slot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainPowerConnector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaximumMemorySize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemorySlot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherBoardDisplayPortOutput")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherBoardMemoryTechnology")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberOfSataPort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCIExperssX16Generation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCIExperssX16Slot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Platform")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProccesorSocket")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RaidSupport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoundChipset")
                        .HasColumnType("bit");

                    b.Property<string>("SupportedProccesor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XmpSupport")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MotherBoards");
                });

            modelBuilder.Entity("Parnas.Domain.Entities.Power", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("ATX3Standard")
                        .HasColumnType("bit");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Current33V")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Current5VSBV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dimensions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EighteenPlusCertificate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("First12Current")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NominalPower")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P4P4PinConnection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pin24Connection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PinConnector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PinPcieConnection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PinSataConnector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plus5VCurrent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerSupplyConnectionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerSupplyFanLighting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerSupplyFanSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProtectionStandards")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("v12VoltCurrent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Powers");
                });

            modelBuilder.Entity("Parnas.Domain.Entities.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AccessoriesId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccessoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ComputerMonitorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoolingId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CpuId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FanCaseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GamingId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GraphicCardId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HddId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherBoardId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PowerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RamId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SsdId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AccessoriesId");

                    b.HasIndex("CaseId");

                    b.HasIndex("ComputerMonitorId");

                    b.HasIndex("CoolingId");

                    b.HasIndex("CpuId");

                    b.HasIndex("FanCaseId");

                    b.HasIndex("GamingId");

                    b.HasIndex("GraphicCardId");

                    b.HasIndex("HddId");

                    b.HasIndex("MotherBoardId");

                    b.HasIndex("PowerId");

                    b.HasIndex("RamId");

                    b.HasIndex("SsdId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("Parnas.Domain.Entities.Ram", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dimensions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ferequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NumberOfModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberOfPin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RamCooler")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RomeLighting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalMemorySize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfRamMemory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VolumeOfEachModules")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rams");
                });

            modelBuilder.Entity("Parnas.Domain.Entities.SSD", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Capacity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dimensions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Longevity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReadingSpeed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSDAppearance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSDInterface")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSDMemoryTechnology")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSDPort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WritingSpeed")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SSDs");
                });

            modelBuilder.Entity("Parnas.Domain.Entities.Category", b =>
                {
                    b.HasOne("Parnas.Domain.Entities.Category", "ParentCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("Parnas.Domain.Entities.ProductImage", b =>
                {
                    b.HasOne("Parnas.Domain.Entities.Accessories", "Accessories")
                        .WithMany("ProductImages")
                        .HasForeignKey("AccessoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Parnas.Domain.Entities.Case", "Case")
                        .WithMany("ProductImages")
                        .HasForeignKey("CaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Parnas.Domain.Entities.ComputerMonitor", "ComputerMonitor")
                        .WithMany("ProductImages")
                        .HasForeignKey("ComputerMonitorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Parnas.Domain.Entities.Cooling", "Cooling")
                        .WithMany("ProductImages")
                        .HasForeignKey("CoolingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Parnas.Domain.Entities.CPU", "CPU")
                        .WithMany("ProductImages")
                        .HasForeignKey("CpuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Parnas.Domain.Entities.FanCase", "FanCase")
                        .WithMany("ProductImages")
                        .HasForeignKey("FanCaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Parnas.Domain.Entities.Gaming", "Gaming")
                        .WithMany("ProductImages")
                        .HasForeignKey("GamingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Parnas.Domain.Entities.GraphicCard", "GraphicCard")
                        .WithMany("ProductImages")
                        .HasForeignKey("GraphicCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Parnas.Domain.Entities.HDD", "HDD")
                        .WithMany("ProductImages")
                        .HasForeignKey("HddId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Parnas.Domain.Entities.MotherBoard", "MotherBoard")
                        .WithMany("ProductImages")
                        .HasForeignKey("MotherBoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Parnas.Domain.Entities.Power", "Power")
                        .WithMany("ProductImages")
                        .HasForeignKey("PowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Parnas.Domain.Entities.Ram", "Ram")
                        .WithMany("ProductImages")
                        .HasForeignKey("RamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Parnas.Domain.Entities.SSD", "SSD")
                        .WithMany("ProductImages")
                        .HasForeignKey("SsdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accessories");

                    b.Navigation("CPU");

                    b.Navigation("Case");

                    b.Navigation("ComputerMonitor");

                    b.Navigation("Cooling");

                    b.Navigation("FanCase");

                    b.Navigation("Gaming");

                    b.Navigation("GraphicCard");

                    b.Navigation("HDD");

                    b.Navigation("MotherBoard");

                    b.Navigation("Power");

                    b.Navigation("Ram");

                    b.Navigation("SSD");
                });

            modelBuilder.Entity("Parnas.Domain.Entities.Accessories", b =>
                {
                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("Parnas.Domain.Entities.Case", b =>
                {
                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("Parnas.Domain.Entities.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("Parnas.Domain.Entities.ComputerMonitor", b =>
                {
                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("Parnas.Domain.Entities.Cooling", b =>
                {
                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("Parnas.Domain.Entities.CPU", b =>
                {
                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("Parnas.Domain.Entities.FanCase", b =>
                {
                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("Parnas.Domain.Entities.Gaming", b =>
                {
                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("Parnas.Domain.Entities.GraphicCard", b =>
                {
                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("Parnas.Domain.Entities.HDD", b =>
                {
                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("Parnas.Domain.Entities.MotherBoard", b =>
                {
                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("Parnas.Domain.Entities.Power", b =>
                {
                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("Parnas.Domain.Entities.Ram", b =>
                {
                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("Parnas.Domain.Entities.SSD", b =>
                {
                    b.Navigation("ProductImages");
                });
#pragma warning restore 612, 618
        }
    }
}
